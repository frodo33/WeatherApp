{"version":3,"sources":["images/lightning.svg","serviceWorker.js","components/Header.js","components/Europe.js","components/Australia.js","components/NorthAmerica.js","components/SouthAmerica.js","components/Africa.js","components/Asia.js","index.js","images/003-cloud.svg","images/001-sunny.svg","images/moon.svg","images/003-cloud-1.svg","components/forecast/DayCard.js","components/forecast/NightCard.js","components/Home.js","components/forecast/Error.js","components/forecast/NextDays.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Header","state","isOpen","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact","className","style","background","dark","expand","to","onClick","this","id","navbar","left","marginLeft","nav","caret","React","Component","AnyReactComponent","_ref","text","width","src","require","alt","Europe","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","lightnings","markers","map","el","i","Europe_AnyReactComponent","key","lat","loc","lng","long","lib_default","bootstrapURLKeys","concat","process","defaultCenter","center","defaultZoom","zoom","reload","_this2","axios","get","then","res","data","response","defaultProps","Australia","Australia_AnyReactComponent","NorthAmerica","NorthAmerica_AnyReactComponent","SouthAmerica","SouthAmerica_AnyReactComponent","Africa","console","log","mapKeye","Africa_AnyReactComponent","Asia","Asia_AnyReactComponent","ReactDOM","render","HashRouter","components_Header","Switch","Route","exact","path","component","Home","document","getElementById","navigator","serviceWorker","ready","registration","unregister","DayCard","react__WEBPACK_IMPORTED_MODULE_5___default","city","dateTimeISO","slice","avgTempC","weatherPrimary","feelslikeC","windDir","windSpeedKPH","pressureMB","humidity","sky","precipMM","snowCM","NightCard","validTime","apiGeocode","apiWeather","_Users_tomek_Desktop_WeatherApp_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_tomek_Desktop_WeatherApp_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_tomek_Desktop_WeatherApp_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","handleClick","e","preventDefault","inputVal","dayForecast","success","periods","filter","isDay","nightForecast","checkQuery","checkCity","handleInputChange","currentTarget","value","loadMore","more","buttonText","results","components","hasOwnProperty","town","village","getDate","date","eval","Date","getUTCHours","Number","onChange","type","placeholder","Fragment","_forecast_DayCard__WEBPACK_IMPORTED_MODULE_7__","_forecast_NightCard__WEBPACK_IMPORTED_MODULE_8__","_forecast_NextDays__WEBPACK_IMPORTED_MODULE_10__","day","night","_forecast_Error__WEBPACK_IMPORTED_MODULE_9__","geolocation","getCurrentPosition","pos","coords","longitude","latitude","err","Error","NextDays","showDetails","children","length","bottom","hideDetails","createBoxes","boxes","_Users_tomek_Desktop_WeatherApp_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","onMouseLeave","onMouseEnter"],"mappings":"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","file":"static/js/main.dc751750.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lightning.d6580252.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport { Navbar, NavbarBrand, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, Dropdown, DropdownToggle, DropdownMenu,  DropdownItem} from \"mdbreact\";\n\nclass Header extends React.Component {\n    state = {\n        isOpen: false\n    };\n\n    toggleCollapse = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n    render() {\n        return (\n\n            <Navbar className='navbar fixed-top' style={{background: `#000 url('http://www.script-tutorials.com/demos/360/images/stars.png') repeat top center`}} dark expand=\"md\">\n                <NavbarBrand>\n                    <NavLink to='/'><strong className=\"white-text\">WeatherApp</strong></NavLink>\n                </NavbarBrand>\n                <NavbarToggler\n                    onClick={this.toggleCollapse}\n                />\n                <Collapse\n                    id=\"navbarCollapse3\"\n                    isOpen={this.state.isOpen}\n                    navbar\n                >\n                    <NavbarNav left>\n                        <NavItem>\n                            <Dropdown style={{marginLeft: '30px'}}>\n                                <DropdownToggle nav caret>\n                                    <div className=\"d-md-inline\">Lightning detector</div>\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <NavLink to=\"/europe\">\n                                        <DropdownItem>Europe</DropdownItem>\n                                    </NavLink>\n                                    <NavLink to=\"/australia\">\n                                        <DropdownItem>Australia</DropdownItem>\n                                    </NavLink>\n                                    <NavLink to=\"/northamerica\">\n                                        <DropdownItem>North America</DropdownItem>\n                                    </NavLink>\n                                    <NavLink to=\"/southamerica\">\n                                        <DropdownItem>South America</DropdownItem>\n                                    </NavLink>\n                                    <NavLink to=\"/africa\">\n                                        <DropdownItem>Africa</DropdownItem>\n                                    </NavLink>\n                                    <NavLink to=\"/asia\">\n                                        <DropdownItem>Asia</DropdownItem>\n                                    </NavLink>\n                                </DropdownMenu>\n                            </Dropdown>\n                        </NavItem>\n                    </NavbarNav>\n                </Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nconst apiMap = process.env.REACT_APP_GOOGLE_KEY;\nconst apiWeather = process.env.REACT_APP_WEATHER_KEY;\n\nconst AnyReactComponent = ({ text }) => (\n    <div><img style={{width: '15px'}} src={require('../images/lightning.svg')} alt='+'/></div>\n)\n\nclass Europe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lightnings: []\n        }\n\n    }\n    static defaultProps = {\n        center: {\n            lat: 52.22977,\n            lng: 21.01178\n        },\n        zoom: 4\n    };\n\n    render() {\n        const markers = this.state.lightnings.map((el,i) => {\n            return (\n                <AnyReactComponent\n                    key={i}\n                    lat={el.loc.lat}\n                    lng={el.loc.long}\n                />\n            )\n        })\n\n        return (\n\n            <div className='maps-container'>\n                <div className='maps'>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: `${apiMap}` }}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                    >\n                        {markers}\n                    </GoogleMapReact>\n                    <button className='load-more' onClick={() => window.location.reload(true)}>Refresh</button>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.aerisapi.com/lightning/warsaw,pl?radius=99999miles&limit=1000&sort=dt:-1&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n            .then(res => {\n                this.setState({\n                    lightnings: res.data.response\n                })\n            })\n    }\n\n}\n\nexport default Europe;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nconst apiMap = process.env.REACT_APP_GOOGLE_KEY;\nconst apiWeather = process.env.REACT_APP_WEATHER_KEY;\n\nconst AnyReactComponent = ({ text }) => (\n    <div><img style={{width: '15px'}} src={require('../images/lightning.svg')} alt='+'/></div>\n)\n\nclass Australia extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lightnings: []\n        }\n\n    }\n    static defaultProps = {\n        center: {\n            lat: -34.93333,\n            lng: 138.6\n        },\n        zoom: 4\n    };\n\n    render() {\n        const markers = this.state.lightnings.map((el,i) => {\n            return <AnyReactComponent key={el.id} lat={el.loc.lat} lng={el.loc.long} />\n        });\n\n        return (\n\n            // Important! Always set the container height explicitly\n            <div className='maps-container'>\n                <div className='maps'>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: `${apiMap}` }}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                    >\n                        {markers}\n                    </GoogleMapReact>\n                    <button className='load-more' onClick={() => window.location.reload(true)}>Refresh</button>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.aerisapi.com/lightning/adelaide,au?radius=999999miles&limit=1000&sort=dt:-1&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n            .then(res => {\n                this.setState({\n                    lightnings: res.data.response\n                })\n            })\n    }\n\n}\n\nexport default Australia;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nconst apiMap = process.env.REACT_APP_GOOGLE_KEY;\nconst apiWeather = process.env.REACT_APP_WEATHER_KEY;\n\nconst AnyReactComponent = ({ text }) => (\n    <div><img style={{width: '15px'}} src={require('../images/lightning.svg')} alt='+'/></div>\n)\n\nclass NorthAmerica extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lightnings: []\n        }\n\n    }\n    static defaultProps = {\n        center: {\n            lat: 44.9778,\n            lng: -93.265\n        },\n        zoom: 4\n    };\n\n    render() {\n        const markers = this.state.lightnings.map((el,i) => {\n            return <AnyReactComponent key={i} lat={el.loc.lat} lng={el.loc.long} />\n        })\n\n        return (\n\n            <div className='maps-container'>\n                <div className='maps'>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: `${apiMap}` }}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                    >\n                        {markers}\n                    </GoogleMapReact>\n                    <button className='load-more' onClick={() => window.location.reload(true)}>Refresh</button>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.aerisapi.com/lightning/minneapolis,mn?radius=999999miles&limit=1000&sort=dt:-1&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n            .then(res => {\n                this.setState({\n                    lightnings: res.data.response\n                })\n            })\n    }\n\n}\n\nexport default NorthAmerica;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nconst apiMap = process.env.REACT_APP_GOOGLE_KEY;\nconst apiWeather = process.env.REACT_APP_WEATHER_KEY;\n\nconst AnyReactComponent = ({ text }) => (\n    <div><img style={{width: '15px'}} src={require('../images/lightning.svg')} alt='+'/></div>\n)\n\nclass SouthAmerica extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lightnings: []\n        }\n\n    }\n    static defaultProps = {\n        center: {\n            lat: -3.10194,\n            lng: -60.025\n        },\n        zoom: 4\n    };\n\n    render() {\n        const markers = this.state.lightnings.map((el,i) => {\n            return <AnyReactComponent key={i} lat={el.loc.lat} lng={el.loc.long} />\n        })\n\n        return (\n            <div className='maps-container'>\n                <div className='maps'>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: `${apiMap}` }}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                    >\n                        {markers}\n                    </GoogleMapReact>\n                    <button className='load-more' onClick={() => window.location.reload(true)}>Refresh</button>\n                </div>\n\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.aerisapi.com/lightning/manaus,br?radius=999999miles&limit=1000&sort=dt:-1&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n            .then(res => {\n                this.setState({\n                    lightnings: res.data.response\n                })\n            })\n    }\n\n}\n\nexport default SouthAmerica;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nconst apiMap = process.env.REACT_APP_GOOGLE_KEY;\nconst apiWeather = process.env.REACT_APP_WEATHER_KEY;\n\nconst AnyReactComponent = () => (\n    <div><img style={{width: '15px'}} src={require('../images/lightning.svg')} alt='+'/></div>\n)\nclass Africa extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lightnings: []\n        }\n\n    }\n\n    static defaultProps = {\n        center: {\n            lat: 11.99435,\n            lng: 8.51381\n        },\n        zoom: 4\n    };\n\n    render() {\n        console.log(this.props.mapKeye);\n        const markers = this.state.lightnings.map((el,i) => {\n            return <AnyReactComponent key={i} lat={el.loc.lat} lng={el.loc.long}/>\n        })\n\n        return (\n            <div className='maps-container'>\n                <div className='maps'>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: `${apiMap}` }}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                    >\n                        {markers}\n                    </GoogleMapReact>\n                    <button className='load-more' onClick={() => window.location.reload(true)}>Refresh</button>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.aerisapi.com/lightning/kano,ng?radius=999999miles&limit=1000&sort=dt:-1&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n            .then(res => {\n                this.setState({\n                    lightnings: res.data.response\n                })\n            })\n    }\n}\n\nexport default Africa;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nconst apiMap = process.env.REACT_APP_GOOGLE_KEY;\nconst apiWeather = process.env.REACT_APP_WEATHER_KEY;\n\nconst AnyReactComponent = () => (\n    <div><img style={{width: '15px'}} src={require('../images/lightning.svg')} alt='+'/></div>\n)\n\nclass Asia extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lightnings: []\n        }\n\n    }\n\n    static defaultProps = {\n        center: {\n            lat: 47.86667,\n            lng: 88.11667\n        },\n        zoom: 4\n    };\n\n    render() {\n        const markers = this.state.lightnings.map((el,i) => {\n            return <AnyReactComponent key={i} lat={el.loc.lat} lng={el.loc.long}/>\n        })\n\n        return (\n            <div className='maps-container'>\n                <div className='maps'>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: `${apiMap}` }}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                    >\n                        {markers}\n                    </GoogleMapReact>\n                    <button className='load-more' onClick={() => window.location.reload(true)}>Refresh</button>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.aerisapi.com/lightning/altay,cn?radius=999999miles&limit=1000&sort=dt:-1&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n            .then(res => {\n                this.setState({\n                    lightnings: res.data.response\n                })\n            })\n    }\n\n}\n\nexport default Asia;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import firebase from 'firebase';\nimport './App.scss'\nimport {\n    HashRouter,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Europe from './components/Europe';\nimport Australia from './components/Australia';\nimport NorthAmerica from \"./components/NorthAmerica\";\nimport SouthAmerica from \"./components/SouthAmerica\";\nimport Africa from \"./components/Africa\";\nimport Asia from \"./components/Asia\";\n\n\n// var config = {\n//     apiKey: `${fbKey}`,\n//     authDomain: \"weather-60729.firebaseapp.com\",\n//     databaseURL: \"https://weather-60729.firebaseio.com\",\n//     projectId: \"weather-60729\",\n//     storageBucket: \"weather-60729.appspot.com\",\n//     messagingSenderId: \"446964294054\"\n// };\n// firebase.initializeApp(config);\n\n\nReactDOM.render(\n    <HashRouter>\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/europe' component={Europe} />\n                <Route path='/australia' component={Australia} />\n                <Route path='/northamerica' component={NorthAmerica} />\n                <Route path='/southamerica' component={SouthAmerica} />\n                <Route path='/africa' component={Africa} />\n                <Route path='/asia' component={Asia} />\n            </Switch>\n        </div>\n    </HashRouter>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/003-cloud.337ebe85.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-sunny.02f11d1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.2d4653c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/003-cloud-1.4f6c5b58.svg\";","import React from 'react';\n\nclass DayCard extends React.Component {\n    render() {\n        return (\n            <div className='card-dn'>\n                <div>\n                    <div className='card-dn_sun'><img src={require('../../images/001-sunny.svg')} alt=''/></div>\n                    <div className='card-dn_cloud-top'><img src={require('../../images/003-cloud.svg')} alt=''/></div>\n                    <div className='card-dn_cloud-bottom'><img src={require('../../images/003-cloud.svg')} alt=''/>\n                    </div>\n                    <div className='card-dn_bg-cloud'><img src={require('../../images/003-cloud.svg')} alt=''/></div>\n                    <div className='card-dn_bg-cloud2'><img src={require('../../images/003-cloud.svg')} alt=''/></div>\n                </div>\n                <div className='card-content'>\n                    <div className='card-content_top'>\n                        <div className='card-content_place'>\n                            <p>{this.props.city}</p>\n                        </div>\n                        <div className='card-content_sunrise'>\n                            <p>{this.props.data[0].dateTimeISO.slice(0, 10)}</p>\n                        </div>\n                    </div>\n\n                    <div className='card-content_middle'>\n                        <div className=\"card-content_temp\">\n                            <p>{this.props.data[0].avgTempC}&deg;</p>\n                        </div>\n                        <div className=\"card-content_descr\">\n                            <p className='card-content_descr-text'>{this.props.data[0].weatherPrimary}</p>\n                            <p>Real feel {this.props.data[0].feelslikeC}&deg;</p>\n                        </div>\n                    </div>\n                    <div className=\"card-content_bottom\">\n                        <div className=\"card-content_winds\">\n                            <p>Winds from the <span>{this.props.data[0].windDir}</span></p>\n                            <p><span>{this.props.data[0].windSpeedKPH}km/h</span></p>\n                            <p>Pressure <span>{this.props.data[0].pressureMB}hpa</span></p>\n                            <p>Humidity <span>{this.props.data[0].humidity}%</span></p>\n                        </div>\n                        <div className=\"card-content_clouds\">\n                            <p>Cloud cover <span>{this.props.data[0].sky}%</span></p>\n                            <p>Rain <span>{this.props.data[0].precipMM}mm</span></p>\n                            <p>Snow <span>{this.props.data[0].snowCM}cm</span></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DayCard;","import React from 'react';\n\nclass NightCard extends React.Component {\n    render() {\n        return (\n            <div className='night-card'>\n                <div>\n                    <div className='moon'><img src={require('../../images/moon.svg')} alt=''/></div>\n                    <div className=\"stars\"></div>\n                    <div className='bg-cloud'><img src={require('../../images/003-cloud-1.svg')} alt=''/></div>\n                    <div className='bg-cloud2'><img src={require('../../images/003-cloud-1.svg')} alt=''/></div>\n                </div>\n                <div className='card-content'>\n                    <div className='card-content_top color'>\n                        <div className='card-content_place'>\n                            <p>{this.props.city}</p>\n                        </div>\n                        <div className='card-content_sunrise'>\n                            <p>{this.props.data[0].validTime.slice(0, 10)}</p>\n                        </div>\n                    </div>\n\n                    <div className='card-content_middle color night'>\n                        <div className=\"card-content_temp\">\n                            <p>{this.props.data[0].avgTempC}&deg;</p>\n                        </div>\n                        <div className=\"card-content_descr\">\n                            <p className='card-content_descr-text'>{this.props.data[0].weatherPrimary}</p>\n                            <p>Real feel {this.props.data[0].feelslikeC}&deg;</p>\n                        </div>\n                    </div>\n                    <div className=\"card-content_bottom\">\n                        <div className=\"card-content_winds\">\n                            <p>Winds from the <span>{this.props.data[0].windDir}</span></p>\n                            <p><span>{this.props.data[0].windSpeedKPH}km/h</span></p>\n                            <p>Pressure <span>{this.props.data[0].pressureMB}hpa</span></p>\n                            <p>Humidity <span>{this.props.data[0].humidity}%</span></p>\n                        </div>\n                        <div className=\"card-content_clouds\">\n                            <p>Cloud cover <span>{this.props.data[0].sky}%</span></p>\n                            <p>Rain <span>{this.props.data[0].precipMM}mm</span></p>\n                            <p>Snow <span>{this.props.data[0].snowCM}cm</span></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NightCard","import React from 'react';\nimport axios from \"axios\";\nimport DayCard from './forecast/DayCard';\nimport NightCard from './forecast/NightCard';\nimport Error from './forecast/Error';\nimport NextDays from './forecast/NextDays';\nconst apiGeocode = process.env.REACT_APP_GEO_KEY;\nconst apiWeather = process.env.REACT_APP_WEATHER_KEY;\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            long: null,\n            lat: null,\n            dayForecast: null,\n            nightForecast: null,\n            city: null,\n            inputVal: '',\n            checkQuery: true,\n            more: false,\n            buttonText: 'Load More'\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div className='home-container'>\n                <h1 className='title'>Check the weather in:</h1>\n                <form>\n                    <div className='search-input'>\n                        <input value={this.state.inputVal} onChange={this.handleInputChange} type=\"text\"\n                               placeholder='Your city'/>\n                    </div>\n                    <div className='submit-button'>\n                        <button onClick={this.handleClick}>Search</button>\n                    </div>\n                </form>\n\n                {\n                    (this.state.dayForecast !== null && this.state.nightForecast !== null)\n                        ? <>\n                            <section className='cards'>\n                                {\n                                    (this.getDate() > 7 && this.getDate() < 19)\n                                        ? <>\n                                            <DayCard city={this.state.city} data={this.state.dayForecast}/>\n                                            <NightCard city={this.state.city} data={this.state.nightForecast}/>\n                                        </>\n                                        : <>\n                                            <NightCard city={this.state.city} data={this.state.nightForecast}/>\n                                            <DayCard city={this.state.city} data={this.state.dayForecast}/>\n                                        </>\n                                }\n                            </section>\n                            <button className='load-more' onClick={this.loadMore}>{this.state.buttonText}</button>\n                            {this.state.more ? <NextDays day={this.state.dayForecast} night={this.state.nightForecast} /> : null}\n                        </>\n\n\n                        : this.state.checkQuery\n                        ? <div className='loader-asd'>\n                            {\n                                this.getDate() > 7 && this.getDate() < 19\n                                    ? <div><img src={require(\"../images/001-sunny.svg\")} alt=\"\"/></div>\n                                    : <div><img src={require(\"../images/moon.svg\")} alt=\"\"/></div>\n                            }\n                        </div>\n                        : <Error/>\n                }\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition(pos => {\n            this.setState({\n                long: pos.coords.longitude,\n                lat: pos.coords.latitude\n            });\n            axios.get(`https://api.aerisapi.com/forecasts/${this.state.lat},${this.state.long}?filter=daynight&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n                .then(res => {\n                    this.setState({\n                        dayForecast: res.data.response[0].periods.filter(el => el.isDay),\n                        nightForecast: res.data.response[0].periods.filter(el => el.isDay == false)\n                    });\n\n                    return axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.lat}+${this.state.long}&key=${apiGeocode}`)\n                })\n                .then(res => {\n                    this.checkCity(res)\n                })\n\n        }, err => {\n            this.setState({\n                lat: 40.7142700,\n                long: -74.0059700\n            });\n\n            axios.get(`https://api.aerisapi.com/forecasts/${this.state.lat},${this.state.long}?filter=daynight&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n                .then(res => {\n                    this.setState({\n                        dayForecast: res.data.response[0].periods.filter(el => el.isDay),\n                        nightForecast: res.data.response[0].periods.filter(el => el.isDay == false),\n                        city: 'New York'\n                    })\n                })\n\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        axios.get(`https://api.aerisapi.com/forecasts/${this.state.inputVal},?filter=daynight&client_id=acDZUrrq2VrlSb3gOoAnG&client_secret=${apiWeather}`)\n            .then(res => {\n                this.setState({\n                    dayForecast: res.data.success == false ? null : res.data.response[0].periods.filter(el => el.isDay),\n                    nightForecast: res.data.success == false ? null : res.data.response[0].periods.filter(el => el.isDay == false),\n                    checkQuery: res.data.success == false ? false : true,\n                    long: res.data.success == true ? res.data.response[0].loc.long : this.state.long,\n                    lat: res.data.success == true ? res.data.response[0].loc.lat : this.state.lat,\n                    inputVal: ''\n                })\n                return axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.lat}+${this.state.long}&key=${apiGeocode}`)\n            })\n            .then(res => {\n                this.checkCity(res);\n            })\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            inputVal: e.currentTarget.value\n        })\n    }\n\n    loadMore = () => {\n        this.setState({\n            more: this.state.more ? false : true,\n            buttonText: this.state.more ? 'Load More' : 'Hide'\n        })\n\n    }\n\n    checkCity = (p) => {\n        const data = p.data.results[0].components;\n        if(data.hasOwnProperty('city')) {\n            this.setState({\n                city: data.city\n            })\n        }\n\n        else if (data.hasOwnProperty('town')) {\n            this.setState({\n                city: data.town\n            })\n        }\n\n        else if (data.hasOwnProperty('village')) {\n            this.setState({\n                city: data.village\n            })\n        }\n    }\n\n    getDate = () => {\n        let date = this.state.dayForecast !== null && eval(new Date().getUTCHours() + this.state.dayForecast[0].dateTimeISO.slice(19,20) + Number(this.state.dayForecast[0].dateTimeISO.slice(20,22)));\n        date = date > 24 ? date - 24 : date;\n        return date;\n    }\n}\n\nexport default Home;","import React from 'react';\n\nclass Error extends React.Component {\n    render() {\n        return (\n            <div className='error'>\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br/>Maybe you have a typo in your query? Or you meant to go to a\n                        different location? Like...Hobbiton?</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Error;","import React from 'react';\n\nclass NextDays extends React.Component {\n    showDetails = (e) => {\n        e.currentTarget.children[e.currentTarget.children.length-1].style.bottom = '-130px';\n    }\n\n    hideDetails = (e) => {\n        e.currentTarget.children[e.currentTarget.children.length-1].style.bottom = '-20px';\n    }\n\n    createBoxes = () => {\n        let boxes = [];\n        for (let i=1; i<7; i++) {\n            boxes = [\n                ...boxes,\n                <div key={i} className=\"box\">\n                    <div onMouseLeave={this.hideDetails} onMouseEnter={this.showDetails} className='box_main'>\n                        <div className='box_day-info'>\n                            <span className='box_date'>{this.props.day[i].validTime.slice(0,10)}</span>\n                            <span className='box_icon'><img src={require('../../images/001-sunny.svg')} alt=\"\"/></span>\n                            <span className='box_temp'>{this.props.day[i].avgTempC}&deg;</span>\n                            <span className='box_text'>{this.props.day[i].weatherPrimary}</span>\n                        </div>\n\n                        <div className='box_night-info'>\n                            <span className='box_date'>{this.props.night[i].validTime.slice(0,10)}</span>\n                            <span className='box_icon'><img src={require('../../images/moon.svg')} alt=\"\"/></span>\n                            <span className='box_temp'>{this.props.night[i].avgTempC}&deg;</span>\n                            <span className='box_text'>{this.props.night[i].weatherPrimary}</span>\n                        </div>\n                        <div className='box_sub'>\n                            <div className='box_day-info radius-day'>\n                                <span>{this.props.day[i].windSpeedKPH}km/h {this.props.day[i].windDir}</span>\n                                <span>{this.props.day[i].pressureMB}hpa</span>\n                                <span>Rain: {this.props.day[i].precipMM}mm</span>\n                                <span>Snow: {this.props.day[i].snowCM}cm</span>\n                            </div>\n                            <div className='box_night-info radius-night'>\n                                <span>{this.props.night[i].windSpeedKPH}km/h {this.props.night[i].windDir}</span>\n                                <span>{this.props.night[i].pressureMB}hpa</span>\n                                <span>Rain: {this.props.night[i].precipMM}mm</span>\n                                <span>Snow: {this.props.night[i].snowCM}cm</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ]\n        }\n        return boxes;\n    }\n\n\n    render() {\n        return (\n            <div className='boxes'>\n                {this.createBoxes()}\n            </div>\n        )\n    }\n}\n\nexport default NextDays;"],"sourceRoot":""}